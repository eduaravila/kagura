---
import PageLayout from "@/layouts/Base";
import { getUniqueTagsWithCount } from "@/utils";
import type { GetStaticPathsResult } from "astro";
import { getCollection } from "astro:content";
import { fallbackLanguage,supportedLanguages } from "i18n";
import { getLocaleFromPostId } from "src/utils/post";



export async function getStaticPaths(): Promise<GetStaticPathsResult> {

  const allPosts = await getCollection("post");

  const postTagsPerLocale = Object.keys(supportedLanguages).map((locale) => {
    const posts = allPosts.filter((p) => getLocaleFromPostId(p.id) === locale);
    const tags = getUniqueTagsWithCount(posts);
    return {
      params: {
        locale,
      },
      props:{
        allTags: tags
      }
    }
  });

  const fallbackLanguagePost = allPosts.filter(
		(p) => getLocaleFromPostId(p.id) === fallbackLanguage
	);
  const fallbackLanguageTags = getUniqueTagsWithCount(fallbackLanguagePost);

	return [
		{
			params: {
				locale: undefined,
			},
      props:{
        allTags: fallbackLanguageTags
      }
		},
		...postTagsPerLocale
	];
}

const meta = {
	title: "All Tags",
	description: "All Tags from my blogs",
};

const {allTags} = Astro.props;
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Tags</h1>
	<ul class="space-y-4">
		{
			Object.entries(allTags).map(([tag, val]) => (
				<li class="flex items-center gap-x-2">
					<a
						class="cactus-link inline-block"
						href={`/tags/${tag}`}
						title={`View posts with the tag: ${tag}`}
						rel="prefetch"
					>
						&#35;{tag}
					</a>
					<span class="inline-block">
						- {val} Post{val > 1 && "s"}
					</span>
				</li>
			))
		}
	</ul>
</PageLayout>
